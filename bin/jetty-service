#!/usr/bin/env jruby

$LOAD_PATH.unshift File.join( File.dirname(__FILE__), "..", "lib" )

require 'rubygems'

begin
  gem 'logback' 
  require 'logback'
  Logback.configure do
    console = Logback::ConsoleAppender.new do |a|
      a.layout = Logback::PatternLayout.new do |p|
        p.pattern = "%-4r %-5level %logger{35} - %msg %ex%n"
      end
    end
    Logback.root.add_appender( console )
    Logback.root.level = Logback::INFO
  end
  log = SLF4J[ 'jetty-service' ]
rescue Gem::LoadError => e
  $stderr.puts( "#{e.to_s.strip}: Not loading logging." )
end

require 'jetty'
require 'jetty/test-servlets'
require 'optparse'

factory = Jetty::ServerFactory.new

factory.webapp_contexts[ '/' ] = Jetty::TestServlets::WEBAPP_TEST_EXPANDED

OptionParser.new do |opts|
  opts.on( "-p", "--port N", Integer, 
           "Port to listen on (default: auto)" ) do |v|
    factory.port = v
  end
  opts.on( "-t", "--threads N", Integer, 
           "Maximum pool threads. (default: #{factory.max_threads})" ) do |v|
    factory.max_threads = v
  end
  opts.on( "-w", "--webapp PATH", 
           "Load PATH as root context webapp. (default: gem test.war)" ) do |v|
    factory.webapp_contexts[ '/' ] = v
  end
  opts.on( "-j", "--jsp", "Enable JSP support by loading jetty-jsp gem") do
    gem( 'jetty-jsp', "~> #{Jetty::JETTY_VERSION}" )
    require 'jetty-jsp'
  end
  opts.on_tail( "-d", "--debug", "Enable debug logging") do
    Logback.root.level = Logback::DEBUG if defined?( Logback )
  end
  opts.on_tail( "-v", "--version", "Show version and exit" ) do
    puts "jetty gem (#{$0}) version: #{Jetty::VERSION}"
    exit
  end
end.parse!

server = factory.create

server.start
msg = "Listening on port: #{server.connectors.first.local_port}"
if defined?( Logback ) 
  log.info( msg ) 
else 
  $stderr.puts( msg )
end
server.join
