Upload rjack docs to rubyforge:

       rsync -auP -e ssh --exclude '.svn' rjack/ dekellum@rubyforge.org:/var/www/gforge-projects/rjack/

Release a gem:

        VERSION=x.y.z jrake release publish_docs post_news

Create new package under rjack project:
(rubyforge login)
rubyforge create_package rjack jetty


rjack:  

Description:

Common Java open-source components packaged as gems for JRuby.


Purpose:

RJack provides common and broadly used open-source java components as
gems for use with JRuby.  In addition rjack gems will provide facades,
adapters, or helpers where needed to support use and/or
configuration/setup of these Java components from ruby code.

RJack is different from such existing projects as "JRuby Extras" in
that the latter is focused on "filling gaps" in JRuby that "exist for
existing Ruby libraries."  RJack by comparison is intended to bring
the advantages of RubyGems to existing Java applications, and lower
barriers for these applications in taking advantage of better ruby
facilities such as file system and command line interaction, DSLs as
better "configuration", etc.

RJack will for example, offer gems for SLF4J and Logback, which
together provide a complete toolkit for unifying and controlling
logging in a heterogeneous application containing ruby and java
components potentially logging to many different logging APIs.  The
gems could minimally be used to get the appropriate java jars into a
class loader for other java components which depend on them.  Beyond
this however, the slf4j gem will offer a ruby core Logger compatible
logging adapter, and the logback gem will provide a facade for
programmatic logback configuration in ruby.

In general, rjack gems will closely track upstream java project
releases (not necessarily individual jars).  Gem version will be based
on the java project version plus an additional gem version
number. Because of this close tracking, higher level JRuby gems such
as those in "JRuby Extras" may find it useful to manage java jar
dependencies with rjack gems.



Hello Jetty developers,

I have initiated a project named "RJack" at RubyForge to package some of the most broadly applicable open-source Java projects as gems.

http://rjack.rubyforge.org/
http://rjack.rubyforge.org/jetty/  (rdoc)
http://rjack.rubyforge.org/jetty-jsp/ (rdoc)

As you may be aware, there is also a "jetty-rails" project hosted on RubyForge. However, the rjack gems have a lower level goal of providing jetty (and jetty-jsp) via the gems system for purposes outside of just rails applications.  Perhaps these efforts could be better unified at some point in the future. 

Beyond the gem packaging, the jetty gem includes a Jetty::ServerFactory which simplifies programmatic setup of Jetty via ruby. I've posted a less trivial example usage on my blog at:

http://gravitext.com/blog/2008/11/09/1226267760000.html
Code sample: http://pastie.org/310392

I believe I've been careful to uphold Jetty's license terms by including the notices and using the Apache 2.0 license for the gems. (See the License section of the above rdoc link.)  However, I thought it would be appropriate to give you an opportunity to review.  Please let me know if there is anything unsatisfactory in the licensing/attribution. 

I'd greatly appreciate any feedback you might be willing to provide. In any case, thanks for your continued efforts in developing Jetty.

--David Kellum

